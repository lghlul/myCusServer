<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="customer.supu.mapper.EmployeeBuyCourseMapper" >
  <resultMap id="BaseResultMap" type="customer.supu.po.EmployeeBuyCourse" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="courseId" property="courseid" jdbcType="INTEGER" />
    <result column="courseType" property="coursetype" jdbcType="INTEGER" />
    <result column="totalClass" property="totalclass" jdbcType="INTEGER" />
    <result column="buyTime" property="buytime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="isExperience" property="isexperience" jdbcType="INTEGER" />
    <result column="startDate" property="startdate" jdbcType="DATE" />
    <result column="endDate" property="enddate" jdbcType="DATE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, userId, courseId, courseType, totalClass, buyTime, status, isExperience, startDate, 
    endDate
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="customer.supu.po.EmployeeBuyCourseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee_buy_course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from employee_buy_course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employee_buy_course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="customer.supu.po.EmployeeBuyCourseExample" >
    delete from employee_buy_course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="customer.supu.po.EmployeeBuyCourse" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into employee_buy_course (userId, courseId, courseType, 
      totalClass, buyTime, status, 
      isExperience, startDate, endDate
      )
    values (#{userid,jdbcType=INTEGER}, #{courseid,jdbcType=INTEGER}, #{coursetype,jdbcType=INTEGER}, 
      #{totalclass,jdbcType=INTEGER}, #{buytime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{isexperience,jdbcType=INTEGER}, #{startdate,jdbcType=DATE}, #{enddate,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="customer.supu.po.EmployeeBuyCourse" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into employee_buy_course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userId,
      </if>
      <if test="courseid != null" >
        courseId,
      </if>
      <if test="coursetype != null" >
        courseType,
      </if>
      <if test="totalclass != null" >
        totalClass,
      </if>
      <if test="buytime != null" >
        buyTime,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="isexperience != null" >
        isExperience,
      </if>
      <if test="startdate != null" >
        startDate,
      </if>
      <if test="enddate != null" >
        endDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="courseid != null" >
        #{courseid,jdbcType=INTEGER},
      </if>
      <if test="coursetype != null" >
        #{coursetype,jdbcType=INTEGER},
      </if>
      <if test="totalclass != null" >
        #{totalclass,jdbcType=INTEGER},
      </if>
      <if test="buytime != null" >
        #{buytime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="isexperience != null" >
        #{isexperience,jdbcType=INTEGER},
      </if>
      <if test="startdate != null" >
        #{startdate,jdbcType=DATE},
      </if>
      <if test="enddate != null" >
        #{enddate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="customer.supu.po.EmployeeBuyCourseExample" resultType="java.lang.Integer" >
    select count(*) from employee_buy_course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update employee_buy_course
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.courseid != null" >
        courseId = #{record.courseid,jdbcType=INTEGER},
      </if>
      <if test="record.coursetype != null" >
        courseType = #{record.coursetype,jdbcType=INTEGER},
      </if>
      <if test="record.totalclass != null" >
        totalClass = #{record.totalclass,jdbcType=INTEGER},
      </if>
      <if test="record.buytime != null" >
        buyTime = #{record.buytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.isexperience != null" >
        isExperience = #{record.isexperience,jdbcType=INTEGER},
      </if>
      <if test="record.startdate != null" >
        startDate = #{record.startdate,jdbcType=DATE},
      </if>
      <if test="record.enddate != null" >
        endDate = #{record.enddate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update employee_buy_course
    set id = #{record.id,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      courseId = #{record.courseid,jdbcType=INTEGER},
      courseType = #{record.coursetype,jdbcType=INTEGER},
      totalClass = #{record.totalclass,jdbcType=INTEGER},
      buyTime = #{record.buytime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      isExperience = #{record.isexperience,jdbcType=INTEGER},
      startDate = #{record.startdate,jdbcType=DATE},
      endDate = #{record.enddate,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="customer.supu.po.EmployeeBuyCourse" >
    update employee_buy_course
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="courseid != null" >
        courseId = #{courseid,jdbcType=INTEGER},
      </if>
      <if test="coursetype != null" >
        courseType = #{coursetype,jdbcType=INTEGER},
      </if>
      <if test="totalclass != null" >
        totalClass = #{totalclass,jdbcType=INTEGER},
      </if>
      <if test="buytime != null" >
        buyTime = #{buytime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="isexperience != null" >
        isExperience = #{isexperience,jdbcType=INTEGER},
      </if>
      <if test="startdate != null" >
        startDate = #{startdate,jdbcType=DATE},
      </if>
      <if test="enddate != null" >
        endDate = #{enddate,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="customer.supu.po.EmployeeBuyCourse" >
    update employee_buy_course
    set userId = #{userid,jdbcType=INTEGER},
      courseId = #{courseid,jdbcType=INTEGER},
      courseType = #{coursetype,jdbcType=INTEGER},
      totalClass = #{totalclass,jdbcType=INTEGER},
      buyTime = #{buytime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      isExperience = #{isexperience,jdbcType=INTEGER},
      startDate = #{startdate,jdbcType=DATE},
      endDate = #{enddate,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>