<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="customer.supu.mapper.StoreMapper" >
  <resultMap id="BaseResultMap" type="customer.supu.po.Store" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="storeName" property="storename" jdbcType="VARCHAR" />
    <result column="storeImg" property="storeimg" jdbcType="VARCHAR" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="region" property="region" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="realseTime" property="realsetime" jdbcType="TIMESTAMP" />
    <result column="realsePeople" property="realsepeople" jdbcType="VARCHAR" />
    <result column="addTime" property="addtime" jdbcType="TIMESTAMP" />
    <result column="addPeople" property="addpeople" jdbcType="VARCHAR" />
    <result column="latitude" property="latitude" jdbcType="DOUBLE"/>
    <result column="longitude" property="longitude" jdbcType="DOUBLE"/>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, storeName, storeImg, province, city, region, address, status, realseTime, realsePeople, 
    addTime, addPeople,latitude,longitude
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="customer.supu.po.StoreExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from store
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from store
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from store
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="customer.supu.po.StoreExample" >
    delete from store
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="customer.supu.po.Store" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into store (storeName, storeImg, province, 
      city, region, address, 
      status, realseTime, realsePeople, 
      addTime, addPeople)
    values (#{storename,jdbcType=VARCHAR}, #{storeimg,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{realsetime,jdbcType=TIMESTAMP}, #{realsepeople,jdbcType=VARCHAR}, 
      #{addtime,jdbcType=TIMESTAMP}, #{addpeople,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="customer.supu.po.Store" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into store
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="storename != null" >
        storeName,
      </if>
      <if test="storeimg != null" >
        storeImg,
      </if>
      <if test="province != null" >
        province,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="region != null" >
        region,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="realsetime != null" >
        realseTime,
      </if>
      <if test="realsepeople != null" >
        realsePeople,
      </if>
      <if test="addtime != null" >
        addTime,
      </if>
      <if test="addpeople != null" >
        addPeople,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="storename != null" >
        #{storename,jdbcType=VARCHAR},
      </if>
      <if test="storeimg != null" >
        #{storeimg,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="region != null" >
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="realsetime != null" >
        #{realsetime,jdbcType=TIMESTAMP},
      </if>
      <if test="realsepeople != null" >
        #{realsepeople,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="addpeople != null" >
        #{addpeople,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="customer.supu.po.StoreExample" resultType="java.lang.Integer" >
    select count(*) from store
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update store
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.storename != null" >
        storeName = #{record.storename,jdbcType=VARCHAR},
      </if>
      <if test="record.storeimg != null" >
        storeImg = #{record.storeimg,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null" >
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null" >
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null" >
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.realsetime != null" >
        realseTime = #{record.realsetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.realsepeople != null" >
        realsePeople = #{record.realsepeople,jdbcType=VARCHAR},
      </if>
      <if test="record.addtime != null" >
        addTime = #{record.addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.addpeople != null" >
        addPeople = #{record.addpeople,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update store
    set id = #{record.id,jdbcType=INTEGER},
      storeName = #{record.storename,jdbcType=VARCHAR},
      storeImg = #{record.storeimg,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      realseTime = #{record.realsetime,jdbcType=TIMESTAMP},
      realsePeople = #{record.realsepeople,jdbcType=VARCHAR},
      addTime = #{record.addtime,jdbcType=TIMESTAMP},
      addPeople = #{record.addpeople,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="customer.supu.po.Store" >
    update store
    <set >
      <if test="storename != null" >
        storeName = #{storename,jdbcType=VARCHAR},
      </if>
      <if test="storeimg != null" >
        storeImg = #{storeimg,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="region != null" >
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="realsetime != null" >
        realseTime = #{realsetime,jdbcType=TIMESTAMP},
      </if>
      <if test="realsepeople != null" >
        realsePeople = #{realsepeople,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        addTime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="addpeople != null" >
        addPeople = #{addpeople,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null" >
        latitude=#{latitude,jdbcType=DECIMAL},
      </if>
      <if test="longitude != null" >
        longitude=#{longitude,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="customer.supu.po.Store" >
    update store
    set storeName = #{storename,jdbcType=VARCHAR},
      storeImg = #{storeimg,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      realseTime = #{realsetime,jdbcType=TIMESTAMP},
      realsePeople = #{realsepeople,jdbcType=VARCHAR},
      addTime = #{addtime,jdbcType=TIMESTAMP},
      addPeople = #{addpeople,jdbcType=VARCHAR},
      latitude=#{latitude,jdbcType=DECIMAL},
      longitude=#{longitude,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="queryStoreByCourse" parameterType="map" resultType="storeBean">
    SELECT
        b.id,b.storeName,b.address
    FROM
        course_stores a
    JOIN store b
    WHERE
        a.storeId = b.id
    AND a.courseId = #{courseId}
    AND a.type = #{type}
    AND a.status = #{status}
  </select>
</mapper>