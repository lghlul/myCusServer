<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="customer.supu.mapper.OrderMapper" >
  <resultMap id="BaseResultMap" type="customer.supu.po.Order" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="cid" property="cid" jdbcType="INTEGER" />
    <result column="buyTime" property="buytime" jdbcType="TIMESTAMP" />
    <result column="amount" property="amount" jdbcType="DOUBLE" />
    <result column="orderNumber" property="ordernumber" jdbcType="VARCHAR" />
    <result column="returnCode" property="returncode" jdbcType="VARCHAR" />
    <result column="isSuccess" property="issuccess" jdbcType="INTEGER" />
    <result column="totalClass" property="totalclass" jdbcType="INTEGER" />
    <result column="isExperience" property="isexperience" jdbcType="INTEGER" />
    <result column="startDate" property="startdate" jdbcType="DATE" />
    <result column="endDate" property="enddate" jdbcType="DATE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, userId, type, cid, buyTime, amount, orderNumber, returnCode, isSuccess, totalClass, 
    isExperience, startDate, endDate
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="customer.supu.po.OrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from u_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from u_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from u_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="customer.supu.po.OrderExample" >
    delete from u_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="customer.supu.po.Order" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into u_order (userId, type, cid, 
      buyTime, amount, orderNumber, 
      returnCode, isSuccess, totalClass, 
      isExperience, startDate, endDate
      )
    values (#{userid,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{cid,jdbcType=INTEGER}, 
      #{buytime,jdbcType=TIMESTAMP}, #{amount,jdbcType=DOUBLE}, #{ordernumber,jdbcType=VARCHAR}, 
      #{returncode,jdbcType=VARCHAR}, #{issuccess,jdbcType=INTEGER}, #{totalclass,jdbcType=INTEGER}, 
      #{isexperience,jdbcType=INTEGER}, #{startdate,jdbcType=DATE}, #{enddate,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="customer.supu.po.Order" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into u_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userId,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="cid != null" >
        cid,
      </if>
      <if test="buytime != null" >
        buyTime,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="ordernumber != null" >
        orderNumber,
      </if>
      <if test="returncode != null" >
        returnCode,
      </if>
      <if test="issuccess != null" >
        isSuccess,
      </if>
      <if test="totalclass != null" >
        totalClass,
      </if>
      <if test="isexperience != null" >
        isExperience,
      </if>
      <if test="startdate != null" >
        startDate,
      </if>
      <if test="enddate != null" >
        endDate,
      </if>
      <if test="coachId != null" >
        coachId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="cid != null" >
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="buytime != null" >
        #{buytime,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="ordernumber != null" >
        #{ordernumber,jdbcType=VARCHAR},
      </if>
      <if test="returncode != null" >
        #{returncode,jdbcType=VARCHAR},
      </if>
      <if test="issuccess != null" >
        #{issuccess,jdbcType=INTEGER},
      </if>
      <if test="totalclass != null" >
        #{totalclass,jdbcType=INTEGER},
      </if>
      <if test="isexperience != null" >
        #{isexperience,jdbcType=INTEGER},
      </if>
      <if test="startdate != null" >
        #{startdate,jdbcType=DATE},
      </if>
      <if test="enddate != null" >
        #{enddate,jdbcType=DATE},
      </if>
      <if test="coachId != null" >
        #{coachId,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="customer.supu.po.OrderExample" resultType="java.lang.Integer" >
    select count(*) from u_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update u_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.cid != null" >
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.buytime != null" >
        buyTime = #{record.buytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.ordernumber != null" >
        orderNumber = #{record.ordernumber,jdbcType=VARCHAR},
      </if>
      <if test="record.returncode != null" >
        returnCode = #{record.returncode,jdbcType=VARCHAR},
      </if>
      <if test="record.issuccess != null" >
        isSuccess = #{record.issuccess,jdbcType=INTEGER},
      </if>
      <if test="record.totalclass != null" >
        totalClass = #{record.totalclass,jdbcType=INTEGER},
      </if>
      <if test="record.isexperience != null" >
        isExperience = #{record.isexperience,jdbcType=INTEGER},
      </if>
      <if test="record.startdate != null" >
        startDate = #{record.startdate,jdbcType=DATE},
      </if>
      <if test="record.enddate != null" >
        endDate = #{record.enddate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update u_order
    set id = #{record.id,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      cid = #{record.cid,jdbcType=INTEGER},
      buyTime = #{record.buytime,jdbcType=TIMESTAMP},
      amount = #{record.amount,jdbcType=DOUBLE},
      orderNumber = #{record.ordernumber,jdbcType=VARCHAR},
      returnCode = #{record.returncode,jdbcType=VARCHAR},
      isSuccess = #{record.issuccess,jdbcType=INTEGER},
      totalClass = #{record.totalclass,jdbcType=INTEGER},
      isExperience = #{record.isexperience,jdbcType=INTEGER},
      startDate = #{record.startdate,jdbcType=DATE},
      endDate = #{record.enddate,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="customer.supu.po.Order" >
    update u_order
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="cid != null" >
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="buytime != null" >
        buyTime = #{buytime,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="ordernumber != null" >
        orderNumber = #{ordernumber,jdbcType=VARCHAR},
      </if>
      <if test="returncode != null" >
        returnCode = #{returncode,jdbcType=VARCHAR},
      </if>
      <if test="issuccess != null" >
        isSuccess = #{issuccess,jdbcType=INTEGER},
      </if>
      <if test="totalclass != null" >
        totalClass = #{totalclass,jdbcType=INTEGER},
      </if>
      <if test="isexperience != null" >
        isExperience = #{isexperience,jdbcType=INTEGER},
      </if>
      <if test="startdate != null" >
        startDate = #{startdate,jdbcType=DATE},
      </if>
      <if test="enddate != null" >
        endDate = #{enddate,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="customer.supu.po.Order" >
    update u_order
    set userId = #{userid,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      cid = #{cid,jdbcType=INTEGER},
      buyTime = #{buytime,jdbcType=TIMESTAMP},
      amount = #{amount,jdbcType=DOUBLE},
      orderNumber = #{ordernumber,jdbcType=VARCHAR},
      returnCode = #{returncode,jdbcType=VARCHAR},
      isSuccess = #{issuccess,jdbcType=INTEGER},
      totalClass = #{totalclass,jdbcType=INTEGER},
      isExperience = #{isexperience,jdbcType=INTEGER},
      startDate = #{startdate,jdbcType=DATE},
      endDate = #{enddate,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>




  <select id="selectAllAmount" parameterType="UOrder" resultType="string">
    select sum(amount) from u_order
    <where>
      <if test="id != null">
        and id = #{id}
      </if>
      <if test="userId != null">
        and userId = #{userId}
      </if>
      <if test="type != null">
        and type = #{type}
      </if>
      <if test="cid != null">
        and cid = #{cid}
      </if>
      <if test="buyTime != null">
        and buyTime = #{buyTime}
      </if>
      <if test="amount != null">
        and amount = #{amount}
      </if>
      <if test="orderNumber != null">
        and orderNumber = #{orderNumber}
      </if>
      <if test="returnCode != null">
        and returnCode = #{returnCode}
      </if>
      <if test="isSuccess != null">
        and isSuccess = #{isSuccess}
      </if>
      <if test="totalClass != null">
        and totalClass = #{totalClass}
      </if>
      <if test="isExperience != null">
        and isExperience = #{isExperience}
      </if>
      <if test="startDate != null">
        and startDate = #{startDate}
      </if>
      <if test="endDate != null">
        and endDate = #{endDate}
      </if>
      <if test="coachId != null">
        and coachId = #{coachId}
      </if>
    </where>
  </select>
</mapper>