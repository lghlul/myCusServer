<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="customer.supu.mapper.EmployeeBuyCardMapper" >
  <resultMap id="BaseResultMap" type="customer.supu.po.EmployeeBuyCard" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="mCardId" property="mcardid" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="buyTime" property="buytime" jdbcType="TIMESTAMP" />
    <result column="expireTime" property="expiretime" jdbcType="TIMESTAMP" />
    <result column="membername" property="membername" jdbcType="VARCHAR" />
    <result column="phoneNumber" property="phonenumber" jdbcType="VARCHAR" />
    <result column="idNumber" property="idnumber" jdbcType="VARCHAR" />
    <result column="memberSource" property="membersource" jdbcType="INTEGER" />
    <result column="addTime" property="addtime" jdbcType="TIMESTAMP" />
    <result column="memberType" property="membertype" jdbcType="INTEGER" />
    <result column="storeId" property="storeid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, userId, mCardId, status, buyTime, expireTime, membername, phoneNumber, idNumber, 
    memberSource, addTime, memberType, storeId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="customer.supu.po.EmployeeBuyCardExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee_buy_card
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from employee_buy_card
    where id = #{id,jdbcType=INTEGER}
  </select>
  
    <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from employee_buy_card
    where userId = #{userId,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employee_buy_card
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="customer.supu.po.EmployeeBuyCardExample" >
    delete from employee_buy_card
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="customer.supu.po.EmployeeBuyCard" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into employee_buy_card (userId, mCardId, status, 
      buyTime, expireTime, membername, 
      phoneNumber, idNumber, memberSource, 
      addTime, memberType, storeId
      )
    values (#{userid,jdbcType=INTEGER}, #{mcardid,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{buytime,jdbcType=TIMESTAMP}, #{expiretime,jdbcType=TIMESTAMP}, #{membername,jdbcType=VARCHAR}, 
      #{phonenumber,jdbcType=VARCHAR}, #{idnumber,jdbcType=VARCHAR}, #{membersource,jdbcType=INTEGER}, 
      #{addtime,jdbcType=TIMESTAMP}, #{membertype,jdbcType=INTEGER}, #{storeid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="customer.supu.po.EmployeeBuyCard" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into employee_buy_card
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userId,
      </if>
      <if test="mcardid != null" >
        mCardId,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="buytime != null" >
        buyTime,
      </if>
      <if test="expiretime != null" >
        expireTime,
      </if>
      <if test="membername != null" >
        membername,
      </if>
      <if test="phonenumber != null" >
        phoneNumber,
      </if>
      <if test="idnumber != null" >
        idNumber,
      </if>
      <if test="membersource != null" >
        memberSource,
      </if>
      <if test="addtime != null" >
        addTime,
      </if>
      <if test="membertype != null" >
        memberType,
      </if>
      <if test="storeid != null" >
        storeId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="mcardid != null" >
        #{mcardid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="buytime != null" >
        #{buytime,jdbcType=TIMESTAMP},
      </if>
      <if test="expiretime != null" >
        #{expiretime,jdbcType=TIMESTAMP},
      </if>
      <if test="membername != null" >
        #{membername,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null" >
        #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="idnumber != null" >
        #{idnumber,jdbcType=VARCHAR},
      </if>
      <if test="membersource != null" >
        #{membersource,jdbcType=INTEGER},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="membertype != null" >
        #{membertype,jdbcType=INTEGER},
      </if>
      <if test="storeid != null" >
        #{storeid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="customer.supu.po.EmployeeBuyCardExample" resultType="java.lang.Integer" >
    select count(*) from employee_buy_card
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update employee_buy_card
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.mcardid != null" >
        mCardId = #{record.mcardid,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.buytime != null" >
        buyTime = #{record.buytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expiretime != null" >
        expireTime = #{record.expiretime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.membername != null" >
        membername = #{record.membername,jdbcType=VARCHAR},
      </if>
      <if test="record.phonenumber != null" >
        phoneNumber = #{record.phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="record.idnumber != null" >
        idNumber = #{record.idnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.membersource != null" >
        memberSource = #{record.membersource,jdbcType=INTEGER},
      </if>
      <if test="record.addtime != null" >
        addTime = #{record.addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.membertype != null" >
        memberType = #{record.membertype,jdbcType=INTEGER},
      </if>
      <if test="record.storeid != null" >
        storeId = #{record.storeid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update employee_buy_card
    set id = #{record.id,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      mCardId = #{record.mcardid,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      buyTime = #{record.buytime,jdbcType=TIMESTAMP},
      expireTime = #{record.expiretime,jdbcType=TIMESTAMP},
      membername = #{record.membername,jdbcType=VARCHAR},
      phoneNumber = #{record.phonenumber,jdbcType=VARCHAR},
      idNumber = #{record.idnumber,jdbcType=VARCHAR},
      memberSource = #{record.membersource,jdbcType=INTEGER},
      addTime = #{record.addtime,jdbcType=TIMESTAMP},
      memberType = #{record.membertype,jdbcType=INTEGER},
      storeId = #{record.storeid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="customer.supu.po.EmployeeBuyCard" >
    update employee_buy_card
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="mcardid != null" >
        mCardId = #{mcardid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="buytime != null" >
        buyTime = #{buytime,jdbcType=TIMESTAMP},
      </if>
      <if test="expiretime != null" >
        expireTime = #{expiretime,jdbcType=TIMESTAMP},
      </if>
      <if test="membername != null" >
        membername = #{membername,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null" >
        phoneNumber = #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="idnumber != null" >
        idNumber = #{idnumber,jdbcType=VARCHAR},
      </if>
      <if test="membersource != null" >
        memberSource = #{membersource,jdbcType=INTEGER},
      </if>
      <if test="addtime != null" >
        addTime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="membertype != null" >
        memberType = #{membertype,jdbcType=INTEGER},
      </if>
      <if test="storeid != null" >
        storeId = #{storeid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="customer.supu.po.EmployeeBuyCard" >
    update employee_buy_card
    set userId = #{userid,jdbcType=INTEGER},
      mCardId = #{mcardid,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      buyTime = #{buytime,jdbcType=TIMESTAMP},
      expireTime = #{expiretime,jdbcType=TIMESTAMP},
      membername = #{membername,jdbcType=VARCHAR},
      phoneNumber = #{phonenumber,jdbcType=VARCHAR},
      idNumber = #{idnumber,jdbcType=VARCHAR},
      memberSource = #{membersource,jdbcType=INTEGER},
      addTime = #{addtime,jdbcType=TIMESTAMP},
      memberType = #{membertype,jdbcType=INTEGER},
      storeId = #{storeid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
    <update id="updateByUserId" parameterType="customer.supu.po.EmployeeBuyCard" >
    update employee_buy_card
    <set >
      <if test="mcardid != null" >
        mCardId = #{mcardid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="buytime != null" >
        buyTime = #{buytime,jdbcType=TIMESTAMP},
      </if>
      <if test="expiretime != null" >
        expireTime = #{expiretime,jdbcType=TIMESTAMP},
      </if>
      <if test="membername != null" >
        membername = #{membername,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null" >
        phoneNumber = #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="idnumber != null" >
        idNumber = #{idnumber,jdbcType=VARCHAR},
      </if>
      <if test="membersource != null" >
        memberSource = #{membersource,jdbcType=INTEGER},
      </if>
      <if test="addtime != null" >
        addTime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="membertype != null" >
        memberType = #{membertype,jdbcType=INTEGER},
      </if>
      <if test="storeid != null" >
        storeId = #{storeid,jdbcType=INTEGER},
      </if>
    </set>
    where userid = #{userid,jdbcType=INTEGER}
  </update>



  <delete id="delete" parameterType="string" >
    delete from employee_buy_card where id = #{id}
  </delete>
</mapper>